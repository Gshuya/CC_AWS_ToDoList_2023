AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Serverless Specification template describing your function.
Resources:
  AddUser:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 900
      Handler: add_user.putUserItemHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      EphemeralStorage:
        Size: 512
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /addUser
            Method: ANY
      Environment:
        Variables:
          TABLE: Users
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      SnapStart:
        ApplyOn: None
      PackageType: Zip
      Policies:
        Statement:
          - Effect: Allow
            Action:
              - 'dynamodb:DescribeStream'
              - 'dynamodb:GetRecords'
              - 'dynamodb:GetShardIterator'
              - 'dynamodb:ListStreams'
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'lambda:InvokeFunction'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'dynamodb:DescribeStream'
              - 'dynamodb:GetRecords'
              - 'dynamodb:GetShardIterator'
              - 'dynamodb:ListStreams'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'execute-api:Invoke'
              - 'execute-api:ManageConnections'
            Resource: 'arn:aws:execute-api:*:*:*'
          - Action:
              - 'dynamodb:*'
              - 'dax:*'
              - 'application-autoscaling:DeleteScalingPolicy'
              - 'application-autoscaling:DeregisterScalableTarget'
              - 'application-autoscaling:DescribeScalableTargets'
              - 'application-autoscaling:DescribeScalingActivities'
              - 'application-autoscaling:DescribeScalingPolicies'
              - 'application-autoscaling:PutScalingPolicy'
              - 'application-autoscaling:RegisterScalableTarget'
              - 'cloudwatch:DeleteAlarms'
              - 'cloudwatch:DescribeAlarmHistory'
              - 'cloudwatch:DescribeAlarms'
              - 'cloudwatch:DescribeAlarmsForMetric'
              - 'cloudwatch:GetMetricStatistics'
              - 'cloudwatch:ListMetrics'
              - 'cloudwatch:PutMetricAlarm'
              - 'cloudwatch:GetMetricData'
              - 'datapipeline:ActivatePipeline'
              - 'datapipeline:CreatePipeline'
              - 'datapipeline:DeletePipeline'
              - 'datapipeline:DescribeObjects'
              - 'datapipeline:DescribePipelines'
              - 'datapipeline:GetPipelineDefinition'
              - 'datapipeline:ListPipelines'
              - 'datapipeline:PutPipelineDefinition'
              - 'datapipeline:QueryObjects'
              - 'iam:GetRole'
              - 'iam:ListRoles'
              - 'kms:DescribeKey'
              - 'kms:ListAliases'
              - 'sns:CreateTopic'
              - 'sns:DeleteTopic'
              - 'sns:ListSubscriptions'
              - 'sns:ListSubscriptionsByTopic'
              - 'sns:ListTopics'
              - 'sns:Subscribe'
              - 'sns:Unsubscribe'
              - 'sns:SetTopicAttributes'
              - 'lambda:CreateFunction'
              - 'lambda:ListFunctions'
              - 'lambda:ListEventSourceMappings'
              - 'lambda:CreateEventSourceMapping'
              - 'lambda:DeleteEventSourceMapping'
              - 'lambda:GetFunctionConfiguration'
              - 'lambda:DeleteFunction'
              - 'resource-groups:ListGroups'
              - 'resource-groups:ListGroupResources'
              - 'resource-groups:GetGroup'
              - 'resource-groups:GetGroupQuery'
              - 'resource-groups:DeleteGroup'
              - 'resource-groups:CreateGroup'
              - 'tag:GetResources'
              - 'kinesis:ListStreams'
              - 'kinesis:DescribeStream'
              - 'kinesis:DescribeStreamSummary'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'cloudwatch:GetInsightRuleReport'
            Effect: Allow
            Resource: 'arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*'
          - Action:
              - 'iam:PassRole'
            Effect: Allow
            Resource: '*'
            Condition:
              StringLike:
                'iam:PassedToService':
                  - application-autoscaling.amazonaws.com
                  - application-autoscaling.amazonaws.com.cn
                  - dax.amazonaws.com
          - Effect: Allow
            Action:
              - 'iam:CreateServiceLinkedRole'
            Resource: '*'
            Condition:
              StringEquals:
                'iam:AWSServiceName':
                  - replication.dynamodb.amazonaws.com
                  - dax.amazonaws.com
                  - dynamodb.application-autoscaling.amazonaws.com
                  - contributorinsights.dynamodb.amazonaws.com
                  - kinesisreplication.dynamodb.amazonaws.com
          - Effect: Allow
            Action:
              - 'logs:CreateLogDelivery'
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:DeleteLogDelivery'
              - 'logs:DescribeLogGroups'
              - 'logs:DescribeLogStreams'
              - 'logs:DescribeResourcePolicies'
              - 'logs:DescribeDestinations'
              - 'logs:DescribeExportTasks'
              - 'logs:DescribeMetricFilters'
              - 'logs:DescribeQueries'
              - 'logs:DescribeQueryDefinitions'
              - 'logs:DescribeSubscriptionFilters'
              - 'logs:GetLogDelivery'
              - 'logs:GetLogEvents'
              - 'logs:PutLogEvents'
              - 'logs:PutResourcePolicy'
              - 'logs:UpdateLogDelivery'
            Resource: 'arn:aws:logs:*:*:log-group:/aws/apigateway/*'
          - Effect: Allow
            Action:
              - 'lambda:InvokeFunction'
            Resource: 'arn:aws:lambda:*:*:function:sagemaker-*'
            Condition:
              'Null':
                'aws:ResourceTag/sagemaker:project-name': 'false'
                'aws:ResourceTag/sagemaker:partner': 'false'
              StringEquals:
                'aws:ResourceAccount': '${aws:PrincipalAccount}'
          - Effect: Allow
            Action:
              - 'sagemaker:InvokeEndpoint'
            Resource: 'arn:aws:sagemaker:*:*:endpoint/*'
            Condition:
              'Null':
                'aws:ResourceTag/sagemaker:project-name': 'false'
                'aws:ResourceTag/sagemaker:partner': 'false'
              StringEquals:
                'aws:ResourceAccount': '${aws:PrincipalAccount}'
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
            Resource: 'arn:aws:logs:us-east-1:956359301805:*'
          - Effect: Allow
            Action:
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource:
              - >-
                arn:aws:logs:us-east-1:956359301805:log-group:/aws/lambda/AddUser:*
